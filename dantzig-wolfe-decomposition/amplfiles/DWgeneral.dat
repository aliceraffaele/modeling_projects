
# DANTZIG-WOLFE DECOMPOSITION
# Bounded Problem

param N := 5; #total number of variables
param K := 8; #total number of constraints
param m := 2; #number of systems 

#subdivision of variables, nj[j] = dimension;
param ni :=
1 2
2 3;

#subdivision of constraints in sets of ki[i] constraints;
param ki :=
0 2
1 2
2 4; 

#all constraint values, subdivised
#b{i in 0..m,1..ki[i]}
param b :=
	[0,*] :=
		1 4
		2 1
	[1,*] :=
		1 7
		2 8
	[2,*] :=   
		1 3
		2 7
		3 5
		4 3;

#all cost values, subdivised 
#{i in 1..m,1..ni[i]}
param c :=
	[1,*] :=
		1 -4
		2 -2
	[2,*] :=
		1 -2
		2 -4
		3 -1;
		
#within index; #specify what matrices, can done by RUN
set iindex := 
(0,1)
(0,2)
(1,1)
(2,2);

#{(i,j) in iindex, 1..ki[i], 1..ni[j]}
param A := 
	[0,1,*,*]: 1 2 :=
		1 1 2 
		2 1 2
	[0,2,*,*]: 1 2 3 := 
		1 3 2 -4
		2 -3 2 -1
	[1,1,*,*]: 1 2 :=
		1 4 2
		2 1 2
	[2,2,*,*]: 1 2 3 :=
		1 1 0 1
		2 2 3 1
		3 3 -1 1
		4 2 -1 1;
		
		
		
param numberOfInitialVertices := #{p in 1..m};
1 2
2 2;

#{p in 1..m, 1..numberOfvertices[p], 1..ni[p]}; 		
param initial_vertices := 
		[1,*,*]: 1 2 :=
			1 1 1.5
			2 1.75 0
		[2,*,*]: 1 2 3:=
			1 2 1 0
			2 0 1.33333333 3;
		